on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 40

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release'}

    env:
      R_KEEP_PKG_SOURCE: yes
      _R_CHECK_SYSTEM_CLOCK_: 0
      CRAN: https://packagemanager.posit.co/cran/__linux__/noble/latest
      GITHUB_PAT: ${{ secrets.GH_PAT }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      ART_RUN_AS_DEMO: FALSE
      ART_USE_PG_CONF: ${{ secrets.ART_USE_PG_CONF }}
      ART_PG_USER_PASSWD_PRD: ${{ secrets.ART_PG_USER_PASSWD_PRD }}
      ART_BUCKETS_KEY_ID: ${{ secrets.ART_BUCKETS_KEY_ID }}
      ART_BUCKETS_KEY_SECRET: ${{ secrets.ART_BUCKETS_KEY_SECRET }}
      ART_OPENAI_KEY: ${{ secrets.ART_OPENAI_KEY }}
      ART_OPENSEA_KEY: ${{ secrets.ART_OPENSEA_KEY }}


    steps:

      # Define environment variable for the repository name
      - name: Set Repository Name
        id: vars
        run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Setup R (Latest)
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install R Package Dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
          cache: always

      - name: Run Package Check
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: artalytics/${{ env.REPO_NAME }}
